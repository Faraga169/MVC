
@model IEnumerable<EmployeeToReturnDTO>
@{
    ViewData["Title"] = "Index";
}

<div>



    @if (!string.IsNullOrEmpty(TempData["Message"] as string))

    {
    <!-- Toast Container -->
    <div aria-live="polite" aria-atomic="true" style="position: relative;">
        <div id="myToast" class="toast shadow-lg custom-toast" data-autohide="false">
            <div class="toast-header">
                <strong class="mr-auto">🔔 Notification</strong>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast">
                    <span>&times;</span>
                </button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>

    }





    <h2 class="text-center mx-auto">Create All Employees</h2>
   <a class="btn btn-primary m-3" asp-controller="Employee" asp-action="Create">Create Employee</a></button>
   <br/>

   <div class="m-2">
       <form class="row offset-2" asp-action="Index" method="get">
           <div class="col-8">

               <input class="form-control" type="text" name="SearchValue" placeholder="Search by Employee Name"/>


           </div >

           <div class="col-4"> 

               <input type="submit" class="btn btn-outline-dark" value="Search"/>

           </div>
       </form>
   </div>
    @if (Model.Count() > 0)
    {
        <table class="table table-striped table-hover mt-3 ">
            <thead class="text-center">
                <tr>
                    <th>@Html.DisplayNameFor(E => E.Image)</th>
                    <th>@Html.DisplayNameFor(E => E.Name)</th>
                    <th>@Html.DisplayNameFor(E => E.Age)</th>
                    <th>@Html.DisplayNameFor(E => E.Address)</th>
                    <th>@Html.DisplayNameFor(E => E.Salary)</th>
                    <th>@Html.DisplayNameFor(E => E.Phone)</th>
                    <th>@Html.DisplayNameFor(E => E.Email)</th>
                    <th>@Html.DisplayNameFor(E => E.department)</th>
                    <th>@Html.DisplayNameFor(E => E.EmployeeType)</th>
                    <th>@Html.DisplayNameFor(E => E.Gender)</th>
                    <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                    <th>Details</th>
                    <th>Update</th>
                    <th>Delete</th>
                </tr>
                    <tbody class="text-center">
                    @foreach (var item in Model)

                    {
                        <tr>
                           <td><img class="rounded" width="40" height="40" alt="Employee Image" src="~/files/Images/@(item.Image is not null ? item.Image :"NotFound.png")" /></td>
                        <td>@Html.DisplayFor(E => item.Name)</td>
                        <td>@Html.DisplayFor(E => item.Age)</td>
                        <td>@Html.DisplayFor(E => item.Address)</td>
                        <td>@Html.DisplayFor(E => item.Salary)</td>
                        <td>@Html.DisplayFor(E => item.Phone)</td>
                        <td>@Html.DisplayFor(E => item.Email)</td>
                        <td>@Html.DisplayFor(E => item.department)</td>
                        <td>@Html.DisplayFor(E => item.EmployeeType)</td>
                        <td>@Html.DisplayFor(E => item.Gender)</td>
                        <td>@Html.DisplayFor(E => item.IsActive)</td>
                           <partial name="_ButtonPartial" model="@item.Id"/>
                        </tr>
                    }
                </tbody>
            </thead>

        </table>

    }

    
    else

        {
            <div class="alert alert-info mt-3">
                <h3 class="text-center">No Employee Found</h3>
            </div>
        }
    

</div>

