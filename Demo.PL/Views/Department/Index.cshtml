
@model IEnumerable<DepartmenttoReturnDto>



@{
	ViewData["Title"] = "IndexAsync";
	string? viewDataMsg =(string?) ViewData["Message"]; // Enforce type Safety [Compilation Time]
	string viewBagMsg = ViewBag.Message;  // Can not enforce type safety [CLR]
}



@* <div class="alert alert-info"> *@
@* 	@ViewData["Message"] *@
@* </div> *@
@if (!string.IsNullOrEmpty(TempData["Message"] as string))

{
	<!-- Toast Container -->
	<div aria-live="polite" aria-atomic="true" style="position: relative;">
		<div id="myToast" class="toast shadow-lg custom-toast" data-autohide="false">
			<div class="toast-header">
				<strong class="mr-auto">🔔 Notification</strong>
				<button type="button" class="ml-2 mb-1 close" data-dismiss="toast">
					<span>&times;</span>
				</button>
			</div>
			<div class="toast-body">
				@TempData["Message"]
			</div>
		</div>
	</div>






}






<h1 class="">All Departments</h1>
<br />
<br />
<a asp-controller="Department" asp-action="Create" class="btn btn-primary">Create Department</a>
<br />
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover mt-3">
        <thead class="text-center">
            <tr>
				<th>@Html.DisplayNameFor(d=>d.Code)</th>
				<th>@Html.DisplayNameFor(d=>d.Name)</th>
				<th>@Html.DisplayNameFor(d=>d.CreationDate)</th>
				<th>Details</th>
				<th>Update</th>
				<th>Delete</th>
            </tr>
        </thead>

        <tbody class="text-center">
			@foreach (var item in Model)
			{
				<tr>
					<td>@item.Code</td>
					<td>@item.Name</td>
					<td>@item.CreationDate</td>

					<partial name="_ButtonPartial" model="@item.Id.ToString()" />
					
					@* @{ *@

					@* 	Html.RenderPartial("_ButtonPartial", item.Id); *@
					
					@* } *@

					@* @Html.Partial("_ButtonPartial", item.Id) *@

				</tr>
			}
        </tbody>


    </table>
}

else

{
    <div class="alert alert-info mt-3">
	<h3 class="text-center">No Department Found</h3>
	</div>
}



